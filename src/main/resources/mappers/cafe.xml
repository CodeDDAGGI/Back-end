<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.finalProject.Back.repository.CafeMapper">

    <insert id="save">
        insert into cafe (id , owner_id, cafeName, address, lat, lng, category)
        values (default, #{owner_id}, #{cafeName} , #{address}, #{lat} , #{lng} , " ")
    </insert>
    <select id="findByCategory" resultType="com.finalProject.Back.entity.Cafe.Cafe">
        SELECT
            c.id as cafeId,
            c.cafeName as cafeName,
            c.address,
            c.category,
            count(r.cafe_id) as reviewCount,
            count(cl.cafe_id) as likeCount
        FROM
            cafe c
            LEFT JOIN review r ON (c.id = r.cafe_id)
            LEFT JOIN cafe_like cl ON (c.id = cl.cafe_id)
        WHERE
            (c.category = #{category} OR #{category} = '전체')
        GROUP BY
            c.id
    </select>

    <select id="findBySearchAndCategory" resultType="com.finalProject.Back.entity.Cafe.Cafe">
        SELECT
            c.id as cafeId,
            c.cafeName as cafeName,
            c.address,
            c.category,
            count(r.cafe_id) as reviewCount,
            count(cl.cafe_id) as likeCount
        FROM
            cafe c
            LEFT JOIN review r ON (c.id = r.cafe_id)
            LEFT JOIN cafe_like cl ON (c.id = cl.cafe_id)
        WHERE
            (c.category = #{category} OR #{category} = '전체')
            AND cafeName LIKE CONCAT('%', #{search}, '%')
        GROUP BY
            c.id
    </select>
</mapper>